### üß† Get view count for a specific post
GET http://localhost:3000/api/Views/GetViews/33333333-3333-3333-3333-333333333333
Accept: application/json

###

### üß™ Run the test route for GetViews
GET http://localhost:3000/api/Views/GetViews/test
Accept: application/json

###

### ‚ö†Ô∏è Example: Missing or invalid postId
GET http://localhost:3000/api/Views/GetViews/33333333-3333-3333-3333-333333333332
Accept: application/json



### üßç‚Äç‚ôÇÔ∏è Create new view (POST /api/Views/CreateView)
POST http://localhost:3000/api/Views/CreateView
Content-Type: application/json

{
  "userId": "22222222-2222-2222-2222-222222222222",
  "postId": "33333333-3333-3333-3333-333333333333"
}


### Create a *new* view (different post)
POST http://localhost:3000/api/Views/CreateView
Content-Type: application/json

{
  "userId": "22222222-2222-2222-2222-222222222222",
  "postId": "11111111-1111-1111-1111-111111111111"
}

### Create another new view (different user/post)
POST http://localhost:3000/api/Views/CreateView
Content-Type: application/json

{
  "userId": "33333333-3333-3333-3333-333333333333",
  "postId": "55555555-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
}


### Create another new view (different user & post)
POST http://localhost:3000/api/Views/CreateView
Content-Type: application/json

{
  "userId": "22222222-2222-2222-2222-222222222222",
  "postId": "66666666-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
}




### üß™ Test GetByUser (automated test route)
GET http://localhost:3000/api/Views/GetByUser/test
Accept: application/json


### üß© Get Views by Specific UserId (manual test)
GET http://localhost:3000/api/Views/GetByUser/33333333-3333-3333-3333-333333333333
Accept: application/json

